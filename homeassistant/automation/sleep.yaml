- alias: 'Go to Sleep'
  id: go_to_sleep
  trigger:
    - platform: state
      entity_id: binary_sensor.jeff_sleeping_at_home
      to: 'on'
    - platform: template
      value_template: "{{ is_state_attr('sensor.bedroom_speaker_alarms', 'next_alarm_status', 'set') }}"
  action:
    - service: script.turn_off
      entity_id:
        - script.bedroom_wake_up
        - script.closet_wake_up
        - script.bathroom_wake_up
        - script.living_area_wake_up
        - script.apartment_wake_up
    - service: script.turn_on
      entity_id:
        - script.bedroom_sleep
        - script.bathroom_sleep
        - script.living_area_sleep
        - script.apartment_sleep


- alias: 'Someone Leaves While Jeff Sleeping'
  id: someone_leaves_while_jeff_sleeping
  trigger:
    - platform: state
      entity_id: person.sasha
      from: 'home'
  condition:
    - "{{ is_state('binary_sensor.jeff_sleeping_at_home', 'on') }}"
    - "{{ not is_state('sensor.jeff_alarm', 'Ringing') }}"
    - "{{ not is_state_attr('sensor.bedroom_speaker_alarms', 'next_alarm_status', 'ringing') }}"
    - "{{ is_state('binary_sensor.guests', 'off') }}"
  action:
    - service: script.turn_off
      entity_id:
        - script.bedroom_wake_up
        - script.closet_wake_up
        - script.bathroom_wake_up
        - script.living_area_wake_up
    - alias: "Turn off lights until they actually turn off"
      repeat:
        sequence:
          - service: homeassistant.turn_off
            entity_id: group.all_lights
          - delay:
              seconds: 30
        until:
          condition: or
          conditions:
            - condition: state
              entity_id: group.all_lights
              state: 'off'
            - condition: state
              entity_id: binary_sensor.jeff_sleeping_at_home
              state: 'off'
    - service: homeassistant.turn_on
      entity_id:
        - switch.bathroom_fluxer
        - automation.bathroom_motion


- alias: 'Wake-Up'
  id: wake_up
  trigger:
    - id: jeff_wake
      platform: state
      entity_id: binary_sensor.jeff_sleeping_at_home
      from: 'on'
      to: 'off'
    - id: speaker_alarm
      platform: state
      entity_id: sensor.bedroom_speaker_alarms
      to: 'unavailable'
    - id: jawilson_webhook
      platform: webhook
      webhook_id: jawilson_sleep
  condition:
    - "{{ trigger.id != 'speaker_alarm' or trigger.from_state.state != 'unknown' }}"
    - "{{ trigger.id != 'jeff_wake' or is_state('person.jeff', 'home') }}"
    - "{{ trigger.id != 'jawilson_webhook' or (is_state('person.jeff', 'home') and trigger.json.event == 'alarm_alert_dismiss' and '#sashaWork' in trigger.json.value2) }}"
  action:
    - service: script.turn_off
      entity_id:
        - script.bedroom_sleep
        - script.bathroom_sleep
        - script.living_area_sleep
        - script.apartment_sleep
    - service: script.turn_on
      entity_id:
        - script.bathroom_wake_up
        - script.living_area_wake_up
    - choose:
      - conditions: "{{ is_state('script.apartment_wake_up', 'off') }}"
        sequence:
          service: script.turn_on
          entity_id: script.apartment_wake_up
    - service: notify.jeff_phone
      data:
        message: clear_notification
        data:
          tag: 'alarm-ringing'
    - alias: "Send apartment wake-up notification"
      service_template: >
        {% if is_state('person.jeff', 'home') and is_state('person.sasha', 'home') %}
        notify.family_phones
        {%- elif is_state('person.jeff', 'home') %}
        notify.jeff_phone
        {%- elif is_state('person.sasha', 'home') %}
        notify.sasha_phone
        {%- endif %}
      data:
        title: 'Good Morning!'
        message: 'Turning on the apartment lights'
        data:
          tag: 'wake-up'
          channel: Wake-Up
          apns_headers:
            'apns-collapse-id': 'wake-up'
          actions:
            - action: 'wake_up_bedroom'
              title: 'Wake-Up Bedroom'
            - action: 'reset_bedroom'
              title: 'Reset Bedroom'
            - action: 'cancel_wake_up'
              title: 'Cancel All'
          push:
            category: 'non_bedroom_wake_up'
    - alias: "Waking hours of the work week"
      condition: time
      after: '5:00:00'
      before: '10:00:00'
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    - alias: "Wake up the closet only if Sasha is the only one getting up"
      choose:
      - conditions:
          - "{{ not is_state('person.jeff', 'home') or is_state('binary_sensor.jeff_sleeping_at_home', 'on') }}"
          - "{{ is_state('person.sasha', 'home') }}"
        sequence:
          service: script.turn_on
          entity_id: script.closet_wake_up
    - alias: "Jeff is still asleep"
      condition: template
      value_template: >
        {{ is_state('binary_sensor.jeff_sleeping_at_home', 'off') }}
    - condition: or
      conditions:
        - "{{ not is_state('person.sasha', 'home') }}"
        - condition: and
          conditions:
            - "{{ state_attr('calendar.sashag_school_end', 'end_time') != None }}"
            - "{{ state_attr('calendar.sashag_school_start', 'start_time') == None or
                    as_timestamp(state_attr('calendar.sashag_school_end', 'end_time')) < as_timestamp(state_attr('calendar.sashag_school_start', 'start_time')) }}"
    - choose:
      - conditions: "{{ is_state('script.closet_wake_up', 'off') }}"
        sequence:
          service: script.turn_on
          entity_id: script.closet_wake_up
    - service: script.turn_on
      entity_id:
        - script.bedroom_wake_up
    - service_template: >
        {% if is_state('person.jeff', 'home') and is_state('person.sasha', 'home') %}
        notify.family_phones
        {%- elif is_state('person.jeff', 'home') %}
        notify.jeff_phone
        {%- elif is_state('person.sasha', 'home') %}
        notify.sasha_phone
        {%- endif %}
      data:
        title: 'Good Morning!'
        message: 'Turning on the bedroom and apartment lights'
        data:
          tag: 'wake-up'
          channel: Wake-Up
          apns_headers:
            'apns-collapse-id': 'wake-up'
          actions:
            - action: 'cancel_bedroom_wake_up'
              title: 'Cancel Bedroom'
            - action: 'reset_bedroom'
              title: 'Reset Bedroom'
            - action: 'cancel_wake_up'
              title: 'Cancel All'
          push:
            category: 'wake_up'


- alias: 'Bedtime Cooldown'
  id: bedtime_cooldown
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: sensor.jeff_alarm
      to: 'Bedtime'
    - platform: numeric_state
      entity_id:
        - sensor.jawilson_phone_next_alarm
        - sensor.time
        - input_number.bedtime_cooldown_hours
      value_template: "{{ 24 if states('sensor.jawilson_phone_next_alarm') == 'unavailable' or state_attr('sensor.jawilson_phone_next_alarm', 'Package') != 'com.urbandroid.sleep' else (states('sensor.jawilson_phone_next_alarm')|as_timestamp - states.sensor.time.last_changed|as_timestamp)/60/60 }}"
      below: input_number.bedtime_cooldown_hours
  condition:
    - condition: state
      entity_id: person.jeff
      state: 'home'
    - condition: state
      entity_id: binary_sensor.jeff_sleeping
      state: 'off'
    - condition: numeric_state
      entity_id:
        - sensor.jawilson_phone_next_alarm
        - input_number.apartment_wakeup_period
      value_template: >
        {{ 0 if states('sensor.jawilson_phone_next_alarm') == 'unavailable' else (states('sensor.jawilson_phone_next_alarm')|as_timestamp - states.sensor.time.last_changed|as_timestamp)/60 }}
      above: input_number.apartment_wakeup_period
  action:
    - condition: or
      conditions:
        - "{{ state_attr('climate.apartment', 'temperature') and state_attr('climate.apartment', 'temperature') > 70 }}"
        - "{{ state_attr('climate.apartment', 'target_temp_high') and state_attr('climate.apartment', 'target_temp_high') > 70 }}"
        - "{{ state_attr('climate.apartment', 'target_temp_low') and state_attr('climate.apartment', 'target_temp_low') > 60 }}"
    - service: notify.jeff_phone
      data:
        title: 'Bedtime Cooldown'
        message: 'Good evening, cooling down the apartment in 5 minutes...'
        data:
          timeout: 300
          tag: 'evening-cooldown'
          actions:
            - action: 'bedtime_cooldown'
              title: 'Cool Down Now'
            - action: 'cancel_bedtime_cooldown'
              title: 'Cancel'
    - wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: bedtime_cooldown
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: cancel_bedtime_cooldown
      timeout:
        minutes: 5
    - condition: template
      value_template: >
        "{{ wait.trigger == None or wait.trigger.event.data.action == bedtime_cooldown }}"
    - service: climate.set_temperature
      data:
        entity_id: climate.apartment
      data_template:
        target_temp_high: "{{ state_attr('climate.apartment', 'target_temp_high')|default(70, True)|min(70) }}"
        temperature: "{{ state_attr('climate.apartment', 'temperature')|default(70, True)|min(70) }}"
        target_temp_low: "{{ state_attr('climate.apartment', 'target_temp_low')|default(60, True)|min(60) }}"
    - service: notify.jeff_phone
      data:
        message: clear_notification
        data:
          tag: 'evening-cooldown'


- alias: 'Alarm Smart Period'
  id: alarm_smart_period
  trigger:
    - platform: state
      entity_id: sensor.jeff_alarm
      to: 'Smart Period'
    - platform: numeric_state
      entity_id:
        - sensor.jawilson_phone_next_alarm
        - sensor.time
        - input_number.apartment_wakeup_period
      value_template: >
        {{ 1440 if states('sensor.jawilson_phone_next_alarm') == 'unknown' else (states('sensor.jawilson_phone_next_alarm')|as_timestamp - states.sensor.time.last_changed|as_timestamp)/60 }}
      below: input_number.apartment_wakeup_period
    - platform: numeric_state
      entity_id:
        - sensor.bedroom_speaker_alarms
        - sensor.time
        - input_number.apartment_wakeup_period
      value_template: >
        {{ 1440 if states('sensor.bedroom_speaker_alarms') == 'unavailable' else (states('sensor.bedroom_speaker_alarms')|as_timestamp - states.sensor.time.last_changed|as_timestamp)/60 }}
      below: input_number.apartment_wakeup_period
  condition:
    condition: state
    entity_id: person.jeff
    state: 'home'
  action:
    - condition: state
      entity_id: input_boolean.climate_auto
      state: 'on'
    - service: script.turn_on
      entity_id: script.apartment_wake_up


- alias: 'Alarm Ringing'
  id: alarm_ringing
  trigger:
    - platform: state
      entity_id: sensor.jeff_alarm
      to: 'Ringing'
    - platform: template
      value_template: "{{ is_state_attr('sensor.bedroom_speaker_alarms', 'next_alarm_status', 'ringing') }}"
  condition:
    - "{{ trigger.entity_id == 'sensor.bedroom_speaker_alarms' or is_state('person.jeff', 'home') }}"
  action:
    - service: script.turn_on
      entity_id: script.alarm_ringing
      data:
        variables:
          light: light.nightstand_1
          target: jawilson_phone


- alias: 'Alarm Snooze'
  id: alarm_snooze
  trigger:
    - platform: state
      entity_id: sensor.jeff_alarm
      to: 'Snoozed'
    - platform: template
      value_template: "{{ is_state_attr('sensor.bedroom_speaker_alarms', 'next_alarm_status', 'snoozed') }}"
  condition:
    - "{{ trigger.entity_id == 'sensor.bedroom_speaker_alarms' or is_state('person.jeff', 'home') }}"
  action:
    - service: script.turn_on
      entity_id: script.alarm_snooze
      data:
        variables:
          light: light.nightstand_1
    - service: notify.jeff_phone
      data:
        message: clear_notification
        data:
          tag: 'alarm-ringing'


- alias: 'Alarm Dismiss'
  id: alarm_dismiss
  trigger:
    platform: state
    entity_id: sensor.jeff_alarm
    to: 'Dismissed'
    for:
      seconds: 5
  condition:
    - condition: state
      entity_id: person.jeff
      state: 'home'
    - condition: state
      entity_id: script.bedroom_wake_up
      state: 'off'
  action:
    - service: script.turn_on
      entity_id: script.alarm_dismiss
      data:
        variables:
          light: light.nightstand_1
    - service: notify.jeff_phone
      data:
        message: clear_notification
        data:
          tag: 'alarm-ringing'


- alias: 'Cancel Alarm Ringing'
  id: cancel_alarm_ringing
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: alarm_ringing_cancel
  action:
    - service: script.turn_off
      entity_id: script.alarm_ringing
    - service: script.turn_on
      entity_id: script.bedroom_sleep


- alias: 'Cancel Bedroom Wake-Up'
  id: cancel_bedroom_wakeup
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: cancel_bedroom_wake_up
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 'CANCEL_BEDROOM_WAKE_UP'
  action:
    - service_template: >
        {% if is_state('person.jeff', 'home') and is_state('person.sasha', 'home') %}
        notify.family_phones
        {%- elif is_state('person.jeff', 'home') %}
        notify.jeff_phone
        {%- elif is_state('person.sasha', 'home') %}
        notify.sasha_phone
        {%- endif %}
      data:
        title: 'Sorry!'
        message: Turning the lights back off
        data:
          tag: 'wake-up'
          channel: Wake-Up
          apns_headers:
            'apns-collapse-id': 'wake-up'
          actions:
            - action: 'wake_up_bedroom'
              title: 'Wake-Up Bedroom'
            - action: 'reset_bedroom'
              title: 'Reset Bedroom'
            - action: 'cancel_wake_up'
              title: 'Cancel All'
          push:
            category: 'non_bedroom_wake_up'
    - service: script.turn_off
      entity_id:
        - script.bedroom_wake_up
        - script.closet_wake_up
        - script.sunrise_wake_up
    - service: script.turn_on
      entity_id: script.bedroom_sleep


- alias: 'Wake-Up Bedroom'
  id: wakeup_bedroom
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: wake_up_bedroom
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 'WAKE_UP_BEDROOM'
  action:
    - service: script.turn_on
      entity_id:
        - script.closet_wake_up
        - script.bedroom_wake_up
    - service_template: >
        {% if is_state('person.jeff', 'home') and is_state('person.sasha', 'home') %}
        notify.family_phones
        {%- elif is_state('person.jeff', 'home') %}
        notify.jeff_phone
        {%- elif is_state('person.sasha', 'home') %}
        notify.sasha_phone
        {%- endif %}
      data:
        title: 'Good Morning!'
        message: 'Turning on the bedroom and apartment lights'
        data:
          tag: 'wake-up'
          channel: Wake-Up
          apns_headers:
            'apns-collapse-id': 'wake-up'
          actions:
            - action: 'cancel_bedroom_wake_up'
              title: 'Cancel Bedroom'
            - action: 'reset_bedroom'
              title: 'Reset Bedroom'
            - action: 'cancel_wake_up'
              title: 'Cancel All'
          push:
            category: 'wake_up'


- alias: 'Reset Bedroom'
  id: reset_bedroom
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: reset_bedroom
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 'RESET_BEDROOM'
  action:
    - service: script.turn_off
      entity_id:
        - script.bedroom_wake_up
        - script.closet_wake_up
    - service: script.turn_on
      entity_id:
        - script.bedroom_reset
        - script.closet_reset


- alias: 'Cancel Wake-Up'
  id: cancel_wakeup
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: cancel_wake_up
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 'CANCEL_WAKE_UP'
  action:
    - service: script.turn_off
      entity_id:
        - script.bedroom_wake_up
        - script.closet_wake_up
        - script.bathroom_wake_up
        - script.living_area_wake_up
        - script.apartment_wake_up
    - service: script.turn_on
      entity_id:
        - script.bedroom_sleep
        - script.bathroom_sleep
        - script.living_area_sleep
