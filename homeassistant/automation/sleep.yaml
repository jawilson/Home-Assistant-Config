- alias: 'Go to Sleep'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.ak_sleeping_at_home
        - binary_sensor.jeff_sleeping_at_home
      to: 'on'
    - platform: state
      entity_id: binary_sensor.everyone_at_home_sleeping
      state: 'on'
  action:
    - service: script.bedroom_sleep
    - service: script.bathroom_sleep
    - service: script.living_area_sleep
    - service: script.apartment_sleep


- alias: 'Wake Up'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.ak_sleeping_at_home
        - binary_sensor.jeff_sleeping_at_home
      to: 'off'
  action:
    - service: script.bedroom_wakeup
      data_template:
        target: >
          {% if trigger.entity_id == 'binary_sensor.ak_sleeping_at_home' %}
          reality
          {% elif trigger.entity_id == 'binary_sensor.jeff_sleeping_at_home' %}
          fluorine
          {% endif %}
    - service: script.bathroom_wakeup
    - service: script.living_area_wakeup
    - service: script.apartment_wakeup


- alias: 'Alarm Bedtime'
  trigger:
    - platform: state
      entity_id:
        - sensor.ak_alarm
        - sensor.jeff_alarm
      to: 'Bedtime'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.ak_alarm' }}"
          - condition: state
            entity_id: device_tracker.annekat_reality
            state: home
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.jeff_alarm' }}"
          - condition: state
            entity_id: device_tracker.jawilson_fluorine
            state: home
  action:
    - service: switch.turn_on
      entity_id: switch.humidifier
    - service: script.apartment_sleep


- alias: 'Alarm Smart Period'
  trigger:
    - platform: state
      entity_id:
        - sensor.ak_alarm
        - sensor.jeff_alarm
      to: 'Smart period'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.ak_alarm' }}"
          - condition: state
            entity_id: device_tracker.annekat_reality
            state: home
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.jeff_alarm' }}"
          - condition: state
            entity_id: device_tracker.jawilson_fluorine
            state: home
  action:
    - service: script.apartment_wakeup


- alias: 'Alarm Ringing'
  trigger:
    - platform: state
      entity_id:
        - sensor.jeff_alarm
      to: 'Ringing'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.ak_alarm' }}"
          - condition: state
            entity_id: device_tracker.annekat_reality
            state: home
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.jeff_alarm' }}"
          - condition: state
            entity_id: device_tracker.jawilson_fluorine
            state: home
  action:
    - service: script.alarm_ringing
      data_template:
        light: >
          {% if trigger.entity_id == 'sensor.ak_alarm' %}
          light.tree_lamp_5
          {% elif trigger.entity_id == 'sensor.jeff_alarm' %}
          light.bedroom_lamp
          {% endif %}
        target: >
          {% if trigger.entity_id == 'sensor.ak_alarm' %}
          reality
          {% elif trigger.entity_id == 'sensor.jeff_alarm' %}
          fluorine
          {% endif %}


- alias: 'Alarm Snooze'
  trigger:
    - platform: state
      entity_id:
        - sensor.ak_alarm
        - sensor.jeff_alarm
      to: 'Snoozed'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.ak_alarm' }}"
          - condition: state
            entity_id: device_tracker.annekat_reality
            state: home
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.jeff_alarm' }}"
          - condition: state
            entity_id: device_tracker.jawilson_fluorine
            state: home
  action:
    - service: script.alarm_snooze
      data_template:
        light: >
          {% if trigger.entity_id == 'sensor.ak_alarm' %}
          light.tree_lamp_5
          {% elif trigger.entity_id == 'sensor.jeff_alarm' %}
          light.bedroom_lamp
          {% endif %}


- alias: 'Alarm Dismiss'
  trigger:
    - platform: state
      entity_id:
        - sensor.ak_alarm
        - sensor.jeff_alarm
      to: 'Dismissed'
      for:
        seconds: 5
  condition:
    - condition: state
      entity_id: binary_sensor.sleeping_at_home
      state: 'on'
    - condition: or
      conditions:
        - condition: and
          conditions:
            - condition: template
              value_template: "{{ trigger.entity_id == 'sensor.ak_alarm' }}"
            - condition: state
              entity_id: device_tracker.annekat_reality
              state: home
        - condition: and
          conditions:
            - condition: template
              value_template: "{{ trigger.entity_id == 'sensor.jeff_alarm' }}"
            - condition: state
              entity_id: device_tracker.jawilson_fluorine
              state: home
  action:
    - service: script.alarm_dismiss
      data_template:
        light: >
          {% if trigger.entity_id == 'sensor.ak_alarm' %}
          light.tree_lamp_5
          {% elif trigger.entity_id == 'sensor.jeff_alarm' %}
          light.bedroom_lamp
          {% endif %}


- alias: 'Wakeup Cancel'
  trigger:
    platform: event
    event_type: html5_notification.clicked
    event_data:
      action: wakeup_cancel
  action:
    - service: script.wakeup_cancel
      data_template:
        target: '{{ trigger.event.data.target }}'
        script: '{{ trigger.event.data.data.script }}'
