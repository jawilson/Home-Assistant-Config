- id: setup_jeff_alarm
  alias: "Setup Jeff Sleeping"
  initial_state: 'on'
  trigger: 
    - platform: homeassistant
      event: start
  action:
    - service: mqtt.publish
      data:
        topic: homeassistant/sensor/jeff_alarm/config
        retain: yes
        payload: >
          {"name": "Jeff Alarm",
          "state_topic": "homeassistant/sensor/jeff_alarm/state",
          "unique_id": "jeff_alarm",
          "device": {
            "name": "Jeff's Alarm",
            "manufacturer": "Urbandroid",
            "model": "Sleep as Android",
            "identifiers": ["jeff_alarm"],
            "via_device": "c0725fd05019e202"
          }}
    - service: mqtt.publish
      data:
        topic: homeassistant/binary_sensor/jeff_sleeping/config
        retain: yes
        payload: >
          {"name": "Jeff Sleeping",
          "state_topic": "homeassistant/binary_sensor/jeff_sleeping/state",
          "unique_id": "jeff_sleeping",
          "device": {
            "name": "Jeff's Alarm",
            "manufacturer": "Urbandroid",
            "model": "Sleep as Android",
            "identifiers": ["jeff_alarm"],
            "via_device": "c0725fd05019e202"
          }}

- id: update_jeff_sleeping
  alias: "Update Jeff Sleeping"
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: 'android.intent_received'
      context:
        user_id: 94f1fb97e8374becb77c3979bbd3fc0b
      event_data:
        intent: 'com.urbandroid.sleep.alarmclock.SLEEP_TRACKING_STARTED_AUTO'
    - platform: event
      event_type: 'android.intent_received'
      context:
        user_id: 94f1fb97e8374becb77c3979bbd3fc0b
      event_data:
        intent: 'com.urbandroid.sleep.alarmclock.SLEEP_TRACKING_STOPPED_AUTO'
  action:
    - service: mqtt.publish
      data:
        topic: homeassistant/binary_sensor/jeff_sleeping/state
        retain: yes
        payload_template: >
          {{ 'ON' if trigger.event.data.intent.endswith('SLEEP_TRACKING_STARTED_AUTO') else 'OFF' }}
    - service: >
        {% if trigger.event.data.intent.endswith('SLEEP_TRACKING_STARTED_AUTO') %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      target:
        entity_id: input_boolean.jeff_sleeping

- id: update_jeff_alarm
  alias: "Update Jeff Alarm"
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: 'android.intent_received'
      context:
        user_id: 94f1fb97e8374becb77c3979bbd3fc0b
      event_data:
        intent: 'com.urbandroid.sleep.alarmclock.SMART_PERIOD_AUTO'
    - platform: event
      event_type: 'android.intent_received'
      context:
        user_id: 94f1fb97e8374becb77c3979bbd3fc0b
      event_data:
        intent: 'com.urbandroid.sleep.alarmclock.ALARM_ALERT_START_AUTO'
    - platform: event
      event_type: 'android.intent_received'
      context:
        user_id: 94f1fb97e8374becb77c3979bbd3fc0b
      event_data:
        intent: 'com.urbandroid.sleep.alarmclock.ALARM_ALERT_DISMISS_AUTO'
    - platform: event
      event_type: 'android.intent_received'
      context:
        user_id: 94f1fb97e8374becb77c3979bbd3fc0b
      event_data:
        intent: 'com.urbandroid.sleep.alarmclock.ALARM_SNOOZE_CLICKED_ACTION_AUTO'
    - platform: event
      event_type: 'android.intent_received'
      context:
        user_id: 94f1fb97e8374becb77c3979bbd3fc0b
      event_data:
        intent: 'com.urbandroid.sleep.alarmclock.TIME_TO_BED_ALARM_ALERT_AUTO'
  action:
    - variables:
        alarm_state: >
          {% if trigger.event.data.intent.endswith('SMART_PERIOD_AUTO') %}
          Smart Period
          {%- elif trigger.event.data.intent.endswith('ALARM_ALERT_START_AUTO') %}
          Ringing
          {%- elif trigger.event.data.intent.endswith('ALARM_ALERT_DISMISS_AUTO') %}
          Dismissed
          {%- elif trigger.event.data.intent.endswith('ALARM_SNOOZE_CLICKED_ACTION_AUTO') %}
          Snoozed
          {%- elif trigger.event.data.intent.endswith('TIME_TO_BED_ALARM_ALERT_AUTO') %}
          Bedtime
          {%- endif %}
    - service: mqtt.publish
      data:
        topic: homeassistant/sensor/jeff_alarm/state
        retain: yes
        payload_template: "{{ alarm_state }}"
    - service: input_select.select_option
      target:
        entity_id: input_select.jeff_alarm
      data:
        option: "{{ alarm_state }}"


- id: update_jeff_travel_sensors_on_movement
  alias: "Update Jeff Travel Sensors On Movement"
  initial_state: true
  trigger:
    - platform: state
      entity_id: person.jeff
  condition:
    - condition: template
      value_template: "{{ state_attr(trigger.entity_id, 'latitude') != None }}"
    - condition: or
      conditions:
        - condition: template
          value_template: "{{ distance(trigger.from_state, trigger.to_state) == None }}"
        - condition: template
          value_template: >
            {{ distance(trigger.from_state, trigger.to_state) > trigger.to_state.attributes.gps_accuracy|default(0.0)|float }}
        - condition: template
          value_template: >
            {{ (as_timestamp(now()) - (as_timestamp(state_attr('automation.update_jeff_travel_sensors_on_movement', 'last_triggered'))|float))/60 > 2 }}
  action:
    - service: homeassistant.update_entity
      entity_id:
        - sensor.jeff_drive_home
        - sensor.jeff_transit_home
        - sensor.jeff_walk_home

- id: update_jeff_travel_sensors_periodic
  alias: "Update Jeff Travel Sensors Periodically"
  initial_state: true
  trigger:
    - platform: time_pattern
      minutes: '/15'
  condition:
    - condition: template
      value_template: "{{ not is_state('person.jeff', 'home') }}"
    - condition: template
      value_template: >
        {{ (as_timestamp(now()) - (as_timestamp(state_attr('automation.update_jeff_travel_sensors_on_movement', 'last_triggered'))|float))/60 > 2 }}
  action:
    - service: homeassistant.update_entity
      entity_id:
        - sensor.jeff_drive_home
        - sensor.jeff_transit_home



- id: update_sasha_travel_sensors_on_movement
  alias: "Update Sasha Travel Sensors On Movement"
  initial_state: true
  trigger:
    - platform: state
      entity_id: person.sasha
  condition:
    - condition: template
      value_template: "{{ state_attr(trigger.entity_id, 'latitude') != None }}"
    - condition: or
      conditions:
        - condition: template
          value_template: "{{ distance(trigger.from_state, trigger.to_state) == None }}"
        - condition: template
          value_template: >
            {{ distance(trigger.from_state, trigger.to_state) > trigger.to_state.attributes.gps_accuracy|default(0.0)|float }}
        - condition: template
          value_template: >
            {{ (as_timestamp(now()) - (as_timestamp(state_attr('automation.update_sasha_travel_sensors_on_movement', 'last_triggered'))|float))/60 > 2 }}
  action:
    - service: homeassistant.update_entity
      entity_id:
        - sensor.sasha_drive_home
        - sensor.sasha_transit_home
        - sensor.sasha_walk_home

- id: update_sasha_travel_sensors_periodic
  alias: "Update Sasha Travel Sensors Periodically"
  initial_state: true
  trigger:
    - platform: time_pattern
      minutes: '/5'
  condition:
    - condition: template
      value_template: "{{ not is_state('person.sasha', 'home') }}"
    - condition: template
      value_template: >
        {{ (as_timestamp(now()) - (as_timestamp(state_attr('automation.update_sasha_travel_sensors_on_movement', 'last_triggered'))|float))/60 > 2 }}
  action:
    - service: homeassistant.update_entity
      entity_id:
        - sensor.sasha_drive_home
        - sensor.sasha_transit_home
