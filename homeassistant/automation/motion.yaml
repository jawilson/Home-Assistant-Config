- alias: Bedroom Motion
  id: bedroom_motion
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_motion
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_motion
      to: 'off'
      for:
        minutes: 3
    - platform: state
      entity_id: light.bedroom_lights
      to: 'on'
      for:
        minutes: 5
  condition:
    - condition: state
      entity_id: input_boolean.motion
      state: 'on'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.bedroom_motion
              state: 'on'
            - condition: state
              entity_id: binary_sensor.apartment_occupied
              state: 'on'
            - condition: state
              entity_id: light.bedroom_lights
              state: 'off'
            - condition: state
              entity_id: binary_sensor.jeff_sleeping_at_home
              state: 'off'
            - condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.jeff_sleeping_at_home
                  state: 'off'
                  for:
                    minutes: 30
                - condition: template
                  value_template: >
                    {{ (as_timestamp(now()) - as_timestamp(states.automation.home_assistant_start.attributes.last_triggered))/60 < 30 }}
            - condition: numeric_state
              entity_id: sensor.bedroom_luminance
              below: '60'
          sequence:
            - service: light.turn_on
              entity_id: light.bedroom_lights
        - conditions:
            - condition: state
              entity_id: binary_sensor.bedroom_motion
              state: 'off'
              for:
                minutes: 3
            - condition: state
              entity_id: light.bedroom_lights
              state: 'on'
            - condition: or
              conditions:
                # If fluxer is off, we're probably doing something specific
                # There may be a better way to handle this
                - condition: state
                  entity_id: switch.bedroom_fluxer
                  state: 'on'
                # If we're sleeping, fluxer will still be off, but we definitely want to turn off
                - condition: state
                  entity_id: binary_sensor.jeff_sleeping_at_home
                  state: 'on'
          sequence:
            - service: light.turn_off
              entity_id: light.bedroom_lights
            - service: switch.turn_on
              entity_id: switch.bedroom_fluxer


- alias: Bathroom Motion
  id: bathroom_motion
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_motion
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bathroom_motion
      to: 'off'
      for:
        minutes: 5
    - platform: state
      entity_id: light.bathroom_lights
      to: 'on'
      for:
        minutes: 10
  condition:
    - condition: state
      entity_id: input_boolean.motion
      state: 'on'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.bathroom_motion
              state: 'on'
            - condition: state
              entity_id: binary_sensor.apartment_occupied
              state: 'on'
            - condition: state
              entity_id: light.bathroom_lights
              state: 'off'
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: binary_sensor.jeff_sleeping_at_home
                      state: 'off'
                    - condition: state
                      entity_id: group.all_lights
                      state: 'on'
                  sequence:
                    - service: light.turn_on
                      entity_id: light.bathroom_lights
              default:
                - service: switch.turn_off
                  entity_id: switch.bathroom_fluxer
                - service: light.turn_on
                  entity_id: light.bathroom_mirror_2
                  data:
                    brightness: 4
                    color_temp: 454
                    transition: 10
        - conditions:
            - condition: state
              entity_id: binary_sensor.bathroom_motion
              state: 'off'
              for:
                minutes: 5
            - condition: state
              entity_id: light.bathroom_lights
              state: 'on'
            # Don't turn off if we're showering
            - condition: state
              entity_id: binary_sensor.showering
              state: 'off'
            - condition: or
              conditions:
                # If fluxer is off, we're probably doing something specific
                # There may be a better way to handle this
                - condition: state
                  entity_id: switch.bathroom_fluxer
                  state: 'on'
                # If we're sleeping, fluxer will still be off, but we definitely want to turn off
                - condition: state
                  entity_id: binary_sensor.jeff_sleeping_at_home
                  state: 'on'
          sequence:
            - service: light.turn_off
              entity_id: light.bathroom_lights
            - service: switch.turn_on
              entity_id: switch.bathroom_fluxer


- alias: Closet Motion
  id: closet_motion
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: binary_sensor.closet_motion
      to: 'on'
    - platform: state
      entity_id: binary_sensor.closet_motion
      to: 'off'
      for:
        minutes: 3
    - platform: state
      entity_id: light.closet_lights
      to: 'on'
      for:
        minutes: 5
  condition:
    - condition: state
      entity_id: input_boolean.motion
      state: 'on'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.closet_motion
              state: 'on'
            - condition: state
              entity_id: binary_sensor.apartment_occupied
              state: 'on'
            - condition: state
              entity_id: light.closet_lights
              state: 'off'
            - condition: state
              entity_id: binary_sensor.jeff_sleeping_at_home
              state: 'off'
            - condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.jeff_sleeping_at_home
                  state: 'off'
                  for:
                    minutes: 30
                - condition: template
                  value_template: >
                    {{ (as_timestamp(now()) - as_timestamp(states.automation.home_assistant_start.attributes.last_triggered))/60 < 30 }}
          sequence:
            - service: light.turn_on
              entity_id: light.closet_lights
        - conditions:
            - condition: state
              entity_id: binary_sensor.closet_motion
              state: 'off'
              for:
                minutes: 3
            - condition: state
              entity_id: light.closet_lights
              state: 'on'
            - condition: or
              conditions:
                # If fluxer is off, we're probably doing something specific
                # There may be a better way to handle this
                - condition: state
                  entity_id: switch.bathroom_fluxer
                  state: 'on'
                # If we're sleeping, fluxer will still be off, but we definitely want to turn off
                - condition: state
                  entity_id: binary_sensor.jeff_sleeping_at_home
                  state: 'on'
          sequence:
            - service: light.turn_off
              entity_id: light.closet_lights
            - service: switch.turn_on
              entity_id: switch.closet_fluxer
